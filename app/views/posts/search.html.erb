<header>
<!-- logo with home link -->
<%= link_to "Home", root_path %>
<!-- search -->
  <%= form_tag '/search', method: 'get' do %>
    <%= label_tag "search" %>
    <%= text_field_tag :name %>
    <%= submit_tag "search" %>
  <% end %>
</header>
<!-- google map -->
<div class="set" id="map-canvas"></div>

<!-- search results -->
<h2>Search results for "<%= @query %>" </h2>
<hr>
<p>These are your experiences based on your search. </p>
<div class="post-group">
  <% @locations.each do |l| %>
    <% if l.address %>
      <span style="display: none;"><%= l.address %>, <%= l.city %> <%= l.state %>, <%= l.location_name %></span>
    <% else %>
      <span style="display: none;"><%= l.cross_st1 %> and <%= l.cross_st2 %>, <%= l.city %> <%= l.state %>, <%= l.location_name %></span>
    <% end %>
  <% end %>
  <% @results.each do |r| %>
    <h3><%= link_to r.title, r, class:'results-image' %></h3>
    <li><%= link_to image_tag(r.image, class:'results-image'), r %></li>
  <% end %>
</div>

<script type="text/javascript">
var markersArray = [];
var NY_LAT = 40.735189;
var NY_LNG = -73.991829;
var QUERY_DELAY = 400;
var inactive = false;
$(document).ready(function() {
  if ($('#map-canvas')){
    // initialize the map on load
    manyMaps();

  /**
   * Initializes the map and some events on page load
   */
    function manyMaps() {
    // Define some options for the map
    var mapOptions = {
      center: new google.maps.LatLng(NY_LAT, NY_LNG),
      zoom: 16,

      // hide controls
      panControl: true,
      streetViewControl: true,

      // reconfigure the zoom controls
      zoomControl: true,
      zoomControlOptions: {
        position: google.maps.ControlPosition.RIGHT_BOTTOM,
        style: google.maps.ZoomControlStyle.SMALL
      }
    };
    // create a new Google map with the options in the map element
     map = new google.maps.Map($('#map-canvas')[0], mapOptions);

      var classa = $('body').find('span').each(function(){
        var addArray = this.innerHTML.split(",");
        var addObj = {address: [addArray[0]], city: addArray[1]};
        var title = addArray[2];
        geocode_address(map, title, addObj);
      });
    };
  //converting address or cross streets into Lat Long
  function geocode_address(map, name, location_object) {
    var geocoder = new google.maps.Geocoder();

    var address = [
      location_object['address'][0],
      location_object['city']
      // location_object['country_code']
    ].join(', ');
    console.log("this is the outterscoped address "+ address);

    // geocode the address and get the lat/lng
    geocoder.geocode({address: address}, function(results, status) {
      if (status === google.maps.GeocoderStatus.OK) {

        // create a marker and drop it on the name on the geocoded location
        var marker = new google.maps.Marker({
          animation: google.maps.Animation.DROP,
          map: map,
          position: results[0].geometry.location,
          title: name
        });

        // save the marker object to calculate the map bound and zoom level
        markersArray.push(marker);
        var bounds = new google.maps.LatLngBounds()
        for (m = 0; m < markersArray.length; m++){
          bounds.extend(markersArray[m].position) 
        }
        map.fitBounds(bounds);
      } else {
        console.log("Geocode was not successful for the following reason: " + status);
      }
    });
  };
  /**
   * Remove all of the markers from the map by setting them
   * to null
   */
    function clearMarkers() {
      markersArray.forEach(function(marker) {
        marker.setMap(null);
      });
      markersArray = [];
    };
  }
});
</script>





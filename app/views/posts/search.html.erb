<%= render "shared/navbar" %>
<!-- Body
=================== -->

<!-- google map -->
<div class="set  col l12" id="map-canvas"></div>

<!-- search results -->
<div class="row">
  <div class="col s12 m12 l12">

      <% if @results.count == 0 %>
        <h1 class="headline">Your search for "<%= @query %>" returned no result</h1>
      <% else %>
        <h1 class="headline">Search results for "<%= @query %>" </h1>
        <hr>
        <h2 class='sub-head'>These are your experiences based on your search. </h2>
      <% end %>
  </div>
</div>

<!-- group of search results -->
<!--wrapped in hidden span tags so that it can be grabbed by the map script by DOM manipulation-->
<div class="row">
  <div class="col l10 offset-l1">
    <% @locations.each do |l| %>
      <% if l.address %>
        <span style="display: none;"><%= l.address %>, <%= l.city %> <%= l.state %>, <%= l.location_name %></span>
      <% else %>
        <span style="display: none;"><%= l.cross_st1 %> and <%= l.cross_st2 %>, <%= l.city %> <%= l.state %>, <%= l.location_name %></span>
      <% end %>
    <% end %>

    <% @results.each do |r| %>
    <div class="col s10 m5 l3 offset-s1 offset-m1">  
      <div class="card">
        <div class="card-image">
          <div><%= link_to image_tag(r.image, class:'posts-image results-image responsive-img'), r %></div>
          <span class="card-title "><%= link_to r.title, r, class:'title shadow' %></span>
          </div>
          <div class="card-content">
            <% @categories.each do |cat| %>
              <% if r.category_id == cat.id %>
                <%= image_tag cat.icon, class:'icon' %>
              <% end %>
            <% end %>
            <p class="p"><%= link_to r.content, r, class:'post-text' %></p>
          </div>

      </div>
    </div>
    <% end %>
  </div>
</div>


<!-- Map Script 
================================-->
<script type="text/javascript">
var markersArray = [];
var NY_LAT = 40.735189;
var NY_LNG = -73.991829;

$(document).ready(function() {

  // initialize the map on load
  manyMarkers();

/**
 * Initializes the map and some events on page load
 */
  function manyMarkers() {
  // Define some options for the map
  var mapOptions2 = {
    center: new google.maps.LatLng(NY_LAT, NY_LNG),
    zoom: 11,
    styles: [{"featureType":"landscape.natural","elementType":"geometry.fill","stylers":[{"visibility":"on"},{"color":"#e0efef"}]},{"featureType":"poi","elementType":"geometry.fill","stylers":[{"visibility":"on"},{"hue":"#1900ff"},{"color":"#c0e8e8"}]},{"featureType":"road","elementType":"geometry","stylers":[{"lightness":100},{"visibility":"simplified"}]},{"featureType":"road","elementType":"labels","stylers":[{"visibility":"off"}]},{"featureType":"transit.line","elementType":"geometry","stylers":[{"visibility":"on"},{"lightness":700}]},{"featureType":"water","elementType":"all","stylers":[{"color":"#7dcdcd"}]}],

    // hide controls
    panControl: true,
    streetViewControl: true,

    // reconfigure the zoom controls
    zoomControl: true,
    zoomControlOptions: {
      position: google.maps.ControlPosition.RIGHT_BOTTOM,
      style: google.maps.ZoomControlStyle.SMALL
    }
  };
  // create a new Google map with the options in the map element
   map = new google.maps.Map($('#map-canvas')[0], mapOptions2);

    var classa = $('body').find('span').each(function(){
      var addArray = this.innerHTML.split(",");
      var addObj = {address: [addArray[0]], city: addArray[1]};
      var title = addArray[2];
      geocode_address(map, title, addObj);
    });
  };
//converting address or cross streets into Lat Long
function geocode_address(map, title, location_object) {
  var geocoder = new google.maps.Geocoder();

  var address = [
    location_object['address'][0],
    location_object['city']
    // location_object['country_code']
  ].join(', ');
  // console.log("this is the outterscoped address "+ address);
  
  // geocode the address and get the lat/lng
  var infowindow = new google.maps.InfoWindow();
  geocoder.geocode({address: address}, function(results, status) {
    if (status === google.maps.GeocoderStatus.OK) {

      var infowindow = new google.maps.InfoWindow({
        content: title,
      });
      // create a marker and drop it on the name on the geocoded location

      var marker = new google.maps.Marker({
        animation: google.maps.Animation.DROP,
        map: map,
        position: results[0].geometry.location,
        title: title
      });
      google.maps.event.addListener(marker, 'mouseover', function(){
        var iwOuter = $('.gm-style-iw');
        // hide the close button
        var iwCloseBtn = iwOuter.next();
        iwCloseBtn.css({
          width: 0,
          height: 0
        })
        infowindow.open(map,marker);
      });
      google.maps.event.addListener(marker, 'mouseout', function(){
        infowindow.close(map,marker);
      });
      // save the marker object to calculate the map bound and zoom level
      markersArray.push(marker);
      var bounds = new google.maps.LatLngBounds()
      for (m = 0; m < markersArray.length; m++){
        bounds.extend(markersArray[m].position) 
      }
      map.fitBounds(bounds);
    } else {
      console.log("Geocode was not successful for the following reason: " + status);
    }

  });
};
/**
 * Remove all of the markers from the map by setting them
 * to null
 */
  function clearMarkers() {
    markersArray.forEach(function(marker) {
      marker.setMap(null);
    });
    markersArray = [];
  };
  
});

</script>





<%= form_tag '/search', method: 'get' do %>
  <%= label_tag "search" %>
  <%= text_field_tag :name %>
  <%= submit_tag "search" %>
<% end %>
<div class="set" id="map-canvas" style="width: 100%; height: 400px; background-color: #CCC "></div>
<div class="post-group">
<% count = 0 %>
  <% @locations.each do |l| %>
    <% count += 1 %>
    <% if l.address %>
      <span style="display: none;"><%= l.address %>, <%= l.city %>, <%= l.location_name %></span>
    <% else %>
      <span style="display: none;"><%= l.cross_st1 %> and <%= l.cross_st2 %>, <%= l.city %>, <%= l.location_name %></span>
    <% end %>
    <% break if count == 10 %>
  <% end %>
  <% @results.each do |r| %>
    <% count += 1 %>
    <h3><%= link_to r.title, r, class:'results-image' %></h3>
    <li><%= link_to image_tag(r.image, class:'results-image'), r %></li>
    <% break if count == 10 %>
  <% end %>
</div>
<script type="text/javascript">
var markersArray = [];
var NY_LAT = 40.735189;
var NY_LNG = -73.991829;
var QUERY_DELAY = 400;
var inactive = false;
$(document).ready(function() {
  if ($('#map-canvas')){
    // initialize the map on load
    manyMaps();

  /**
   * Initializes the map and some events on page load
   */
   function manyMaps() {
    // Define some options for the map
    var mapOptions = {
      center: new google.maps.LatLng(NY_LAT, NY_LNG),
      zoom: 16,

      // hide controls
      panControl: true,
      streetViewControl: true,

      // reconfigure the zoom controls
      zoomControl: true,
      zoomControlOptions: {
        position: google.maps.ControlPosition.RIGHT_BOTTOM,
        style: google.maps.ZoomControlStyle.SMALL
      }
    };
    // create a new Google map with the options in the map element
     map = new google.maps.Map($('#map-canvas')[0], mapOptions);

      var classa = $('body').find('span').each(function(){
        var addArray = this.innerHTML.split(",");
        var addObj = {address: [addArray[0]], city: addArray[1]};
        var title = addArray[2];
        geocode_address(map, title, addObj);
      });

    };


  /**
   * Geocode the address from the business and drop a marker on it's
   * location on the map
   *
   * param: map - the Google map object to drop a marker on
   * param: name - the name of the business, used for when you hover
   *               over the dropped marker
   * param: location_object - an object of the businesses address
   */
  function geocode_address(map, name, location_object) {
    var geocoder = new google.maps.Geocoder();

    var address = [
      location_object['address'][0],
      location_object['city'],
      // location_object['country_code']
    ].join(', ');
    console.log("this is the outterscoped address "+ address);

    // geocode the address and get the lat/lng
    geocoder.geocode({address: address}, function(results, status) {
      if (status === google.maps.GeocoderStatus.OK) {

        // create a marker and drop it on the name on the geocoded location
        var marker = new google.maps.Marker({
          animation: google.maps.Animation.DROP,
          map: map,
          position: results[0].geometry.location,
          title: name
        });
        // console.log(position);

        // save the marker object so we can delete it later
        markersArray.push(marker);
      } else {
        console.log("Geocode was not successful for the following reason: " + status);
      }
    });
  };

  // var address = {address: ["140 tenth street"], city: "New York", country_code: 001}
  // geocode_address(map, "fritzyz", address)
  /**
   * Remove all of the markers from the map by setting them
   * to null
   */
    function clearMarkers() {
      markersArray.forEach(function(marker) {
        marker.setMap(null);
      });

      markersArray = [];
    };
  }
});
</script>




